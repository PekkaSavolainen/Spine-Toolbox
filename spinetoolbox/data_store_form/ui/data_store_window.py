# -*- coding: utf-8 -*-
######################################################################################################################
# Copyright (C) 2017-2020 Spine project consortium
# This file is part of Spine Toolbox.
# Spine Toolbox is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General
# Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option)
# any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
# Public License for more details. You should have received a copy of the GNU Lesser General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
######################################################################################################################

################################################################################
## Form generated from reading UI file 'data_store_window.ui'
##
## Created by: Qt User Interface Compiler version 5.14.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide2.QtCore import (QCoreApplication, QDate, QDateTime, QMetaObject,
    QObject, QPoint, QRect, QSize, QTime, QUrl, Qt)
from PySide2.QtGui import (QBrush, QColor, QConicalGradient, QCursor, QFont,
    QFontDatabase, QIcon, QKeySequence, QLinearGradient, QPalette, QPainter,
    QPixmap, QRadialGradient)
from PySide2.QtWidgets import *

from spinetoolbox.data_store_form.widgets.custom_qgraphicsviews import EntityQGraphicsView
from spinetoolbox.data_store_form.widgets.custom_qtreeview import ObjectTreeView
from spinetoolbox.data_store_form.widgets.custom_qtreeview import ParameterValueListTreeView
from spinetoolbox.data_store_form.widgets.custom_qtableview import FrozenTableView
from spinetoolbox.data_store_form.widgets.custom_qtreeview import RelationshipTreeView
from spinetoolbox.data_store_form.widgets.custom_qtableview import PivotTableView
from spinetoolbox.data_store_form.widgets.custom_qtableview import ObjectParameterValueTableView
from spinetoolbox.data_store_form.widgets.custom_qtableview import ObjectParameterDefinitionTableView
from spinetoolbox.data_store_form.widgets.custom_qtableview import RelationshipParameterDefinitionTableView
from spinetoolbox.data_store_form.widgets.custom_qtableview import RelationshipParameterValueTableView
from spinetoolbox.data_store_form.widgets.custom_qtreeview import AlternativeScenarioTreeView

from spinetoolbox import resources_icons_rc

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(889, 817)
        MainWindow.setLayoutDirection(Qt.LeftToRight)
        MainWindow.setDockOptions(QMainWindow.AllowNestedDocks|QMainWindow.AllowTabbedDocks|QMainWindow.AnimatedDocks|QMainWindow.GroupedDragging)
        self.actionCommit = QAction(MainWindow)
        self.actionCommit.setObjectName(u"actionCommit")
        self.actionCommit.setEnabled(True)
        icon = QIcon()
        icon.addFile(u":/icons/menu_icons/check.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCommit.setIcon(icon)
        self.actionRollback = QAction(MainWindow)
        self.actionRollback.setObjectName(u"actionRollback")
        self.actionRollback.setEnabled(True)
        icon1 = QIcon()
        icon1.addFile(u":/icons/menu_icons/undo.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRollback.setIcon(icon1)
        self.actionClose = QAction(MainWindow)
        self.actionClose.setObjectName(u"actionClose")
        icon2 = QIcon()
        icon2.addFile(u":/icons/menu_icons/window-close.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionClose.setIcon(icon2)
        self.actionAdd_object_classes = QAction(MainWindow)
        self.actionAdd_object_classes.setObjectName(u"actionAdd_object_classes")
        icon3 = QIcon()
        icon3.addFile(u":/icons/menu_icons/cube_plus.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_object_classes.setIcon(icon3)
        self.actionAdd_objects = QAction(MainWindow)
        self.actionAdd_objects.setObjectName(u"actionAdd_objects")
        self.actionAdd_objects.setIcon(icon3)
        self.actionAdd_relationship_classes = QAction(MainWindow)
        self.actionAdd_relationship_classes.setObjectName(u"actionAdd_relationship_classes")
        icon4 = QIcon()
        icon4.addFile(u":/icons/menu_icons/cubes_plus.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAdd_relationship_classes.setIcon(icon4)
        self.actionAdd_relationships = QAction(MainWindow)
        self.actionAdd_relationships.setObjectName(u"actionAdd_relationships")
        self.actionAdd_relationships.setIcon(icon4)
        self.actionImport = QAction(MainWindow)
        self.actionImport.setObjectName(u"actionImport")
        icon5 = QIcon()
        icon5.addFile(u":/icons/project_item_icons/database-import.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionImport.setIcon(icon5)
        self.actionExport = QAction(MainWindow)
        self.actionExport.setObjectName(u"actionExport")
        self.actionExport.setEnabled(True)
        icon6 = QIcon()
        icon6.addFile(u":/icons/project_item_icons/database-export.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExport.setIcon(icon6)
        self.actionCopy = QAction(MainWindow)
        self.actionCopy.setObjectName(u"actionCopy")
        self.actionCopy.setEnabled(True)
        icon7 = QIcon()
        icon7.addFile(u":/icons/menu_icons/copy.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCopy.setIcon(icon7)
        self.actionPaste = QAction(MainWindow)
        self.actionPaste.setObjectName(u"actionPaste")
        self.actionPaste.setEnabled(True)
        icon8 = QIcon()
        icon8.addFile(u":/icons/menu_icons/paste.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPaste.setIcon(icon8)
        self.actionRefresh = QAction(MainWindow)
        self.actionRefresh.setObjectName(u"actionRefresh")
        icon9 = QIcon()
        icon9.addFile(u":/icons/menu_icons/sync.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRefresh.setIcon(icon9)
        self.actionEdit_selected = QAction(MainWindow)
        self.actionEdit_selected.setObjectName(u"actionEdit_selected")
        self.actionEdit_selected.setEnabled(True)
        icon10 = QIcon()
        icon10.addFile(u":/icons/menu_icons/cube_pen.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionEdit_selected.setIcon(icon10)
        self.actionManage_parameter_tags = QAction(MainWindow)
        self.actionManage_parameter_tags.setObjectName(u"actionManage_parameter_tags")
        self.actionRemove_selected = QAction(MainWindow)
        self.actionRemove_selected.setObjectName(u"actionRemove_selected")
        self.actionRemove_selected.setEnabled(True)
        icon11 = QIcon()
        icon11.addFile(u":/icons/menu_icons/cube_minus.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRemove_selected.setIcon(icon11)
        self.actionHide_selected = QAction(MainWindow)
        self.actionHide_selected.setObjectName(u"actionHide_selected")
        self.actionShow_hidden = QAction(MainWindow)
        self.actionShow_hidden.setObjectName(u"actionShow_hidden")
        self.actionPrune_selected_entities = QAction(MainWindow)
        self.actionPrune_selected_entities.setObjectName(u"actionPrune_selected_entities")
        self.actionRestore_all_pruned = QAction(MainWindow)
        self.actionRestore_all_pruned.setObjectName(u"actionRestore_all_pruned")
        self.actionStacked_style = QAction(MainWindow)
        self.actionStacked_style.setObjectName(u"actionStacked_style")
        icon12 = QIcon()
        icon12.addFile(u":/icons/menu_icons/table.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionStacked_style.setIcon(icon12)
        self.actionGraph_style = QAction(MainWindow)
        self.actionGraph_style.setObjectName(u"actionGraph_style")
        icon13 = QIcon()
        icon13.addFile(u":/icons/project-diagram.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionGraph_style.setIcon(icon13)
        self.actionPivot_style = QAction(MainWindow)
        self.actionPivot_style.setObjectName(u"actionPivot_style")
        icon14 = QIcon()
        icon14.addFile(u":/icons/menu_icons/pivot-table.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPivot_style.setIcon(icon14)
        self.actionView_history = QAction(MainWindow)
        self.actionView_history.setObjectName(u"actionView_history")
        self.actionClear_positions = QAction(MainWindow)
        self.actionClear_positions.setObjectName(u"actionClear_positions")
        self.actionSave_positions = QAction(MainWindow)
        self.actionSave_positions.setObjectName(u"actionSave_positions")
        self.actionExport_graph_as_pdf = QAction(MainWindow)
        self.actionExport_graph_as_pdf.setObjectName(u"actionExport_graph_as_pdf")
        self.actionExport_graph_as_pdf.setEnabled(False)
        self.actionPrune_selected_classes = QAction(MainWindow)
        self.actionPrune_selected_classes.setObjectName(u"actionPrune_selected_classes")
        self.actiontt = QAction(MainWindow)
        self.actiontt.setObjectName(u"actiontt")
        self.actionMass_remove_items = QAction(MainWindow)
        self.actionMass_remove_items.setObjectName(u"actionMass_remove_items")
        self.actionMass_remove_items.setIcon(icon11)
        self.actionSaveAsTemplate = QAction(MainWindow)
        self.actionSaveAsTemplate.setObjectName(u"actionSaveAsTemplate")
        self.actionLoadTemplate = QAction(MainWindow)
        self.actionLoadTemplate.setObjectName(u"actionLoadTemplate")
        self.actionExport_session = QAction(MainWindow)
        self.actionExport_session.setObjectName(u"actionExport_session")
        self.actionExport_session.setIcon(icon6)
        self.actionSettings = QAction(MainWindow)
        self.actionSettings.setObjectName(u"actionSettings")
        icon15 = QIcon()
        icon15.addFile(u":/icons/menu_icons/cog.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSettings.setIcon(icon15)
        self.actionFull_relationship_expansion = QAction(MainWindow)
        self.actionFull_relationship_expansion.setObjectName(u"actionFull_relationship_expansion")
        self.actionFull_relationship_expansion.setCheckable(True)
        self.actionFull_relationship_expansion.setChecked(True)
        self.actionInput_type = QAction(MainWindow)
        self.actionInput_type.setObjectName(u"actionInput_type")
        self.actionParameter_value = QAction(MainWindow)
        self.actionParameter_value.setObjectName(u"actionParameter_value")
        self.actionRelationship = QAction(MainWindow)
        self.actionRelationship.setObjectName(u"actionRelationship")
        self.actionIndexed_parameter_expansion = QAction(MainWindow)
        self.actionIndexed_parameter_expansion.setObjectName(u"actionIndexed_parameter_expansion")
        self.actionInput_type_parameter_value = QAction(MainWindow)
        self.actionInput_type_parameter_value.setObjectName(u"actionInput_type_parameter_value")
        self.actionInput_type_parameter_value.setCheckable(True)
        self.actionInput_type_parameter_value.setChecked(True)
        self.actionInput_type_relationship = QAction(MainWindow)
        self.actionInput_type_relationship.setObjectName(u"actionInput_type_relationship")
        self.actionInput_type_relationship.setCheckable(True)
        self.actionInput_type_index_expansion = QAction(MainWindow)
        self.actionInput_type_index_expansion.setObjectName(u"actionInput_type_index_expansion")
        self.actionInput_type_index_expansion.setCheckable(True)
        self.actionRebuild_graph = QAction(MainWindow)
        self.actionRebuild_graph.setObjectName(u"actionRebuild_graph")
        self.actionManage_relationships = QAction(MainWindow)
        self.actionManage_relationships.setObjectName(u"actionManage_relationships")
        icon16 = QIcon()
        icon16.addFile(u":/icons/menu_icons/cubes_pen.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionManage_relationships.setIcon(icon16)
        self.actionUser_guide = QAction(MainWindow)
        self.actionUser_guide.setObjectName(u"actionUser_guide")
        icon17 = QIcon()
        icon17.addFile(u":/icons/menu_icons/question-circle.svg", QSize(), QIcon.Normal, QIcon.Off)
        self.actionUser_guide.setIcon(icon17)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        sizePolicy = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.verticalLayout_2 = QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 889, 28))
        self.menubar.setNativeMenuBar(False)
        self.menuSession = QMenu(self.menubar)
        self.menuSession.setObjectName(u"menuSession")
        self.menuEdit = QMenu(self.menubar)
        self.menuEdit.setObjectName(u"menuEdit")
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuView = QMenu(self.menubar)
        self.menuView.setObjectName(u"menuView")
        self.menuGraph = QMenu(self.menubar)
        self.menuGraph.setObjectName(u"menuGraph")
        self.menuGraph.setToolTipsVisible(True)
        self.menuRestore_pruned = QMenu(self.menuGraph)
        self.menuRestore_pruned.setObjectName(u"menuRestore_pruned")
        self.menuAdd_parameter_heat_map = QMenu(self.menuGraph)
        self.menuAdd_parameter_heat_map.setObjectName(u"menuAdd_parameter_heat_map")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        self.menuPivot_table = QMenu(self.menubar)
        self.menuPivot_table.setObjectName(u"menuPivot_table")
        MainWindow.setMenuBar(self.menubar)
        self.dockWidget_alternative_scenario_tree = QDockWidget(MainWindow)
        self.dockWidget_alternative_scenario_tree.setObjectName(u"dockWidget_alternative_scenario_tree")
        self.dockWidget_alternative_scenario_tree.setAllowedAreas(Qt.AllDockWidgetAreas)
        self.dockWidgetContents_15 = QWidget()
        self.dockWidgetContents_15.setObjectName(u"dockWidgetContents_15")
        self.verticalLayout_18 = QVBoxLayout(self.dockWidgetContents_15)
        self.verticalLayout_18.setSpacing(0)
        self.verticalLayout_18.setObjectName(u"verticalLayout_18")
        self.verticalLayout_18.setContentsMargins(0, 0, 0, 0)
        self.treeView_alternative_scenario = AlternativeScenarioTreeView(self.dockWidgetContents_15)
        self.treeView_alternative_scenario.setObjectName(u"treeView_alternative_scenario")
        self.treeView_alternative_scenario.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.treeView_alternative_scenario.setAcceptDrops(True)
        self.treeView_alternative_scenario.setEditTriggers(QAbstractItemView.AnyKeyPressed|QAbstractItemView.EditKeyPressed)
        self.treeView_alternative_scenario.setDragEnabled(True)
        self.treeView_alternative_scenario.setDragDropMode(QAbstractItemView.InternalMove)
        self.treeView_alternative_scenario.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.treeView_alternative_scenario.setSelectionBehavior(QAbstractItemView.SelectItems)
        self.treeView_alternative_scenario.setIconSize(QSize(20, 20))
        self.treeView_alternative_scenario.setUniformRowHeights(True)

        self.verticalLayout_18.addWidget(self.treeView_alternative_scenario)

        self.dockWidget_alternative_scenario_tree.setWidget(self.dockWidgetContents_15)
        MainWindow.addDockWidget(Qt.LeftDockWidgetArea, self.dockWidget_alternative_scenario_tree)
        self.dockWidget_parameter_value_list = QDockWidget(MainWindow)
        self.dockWidget_parameter_value_list.setObjectName(u"dockWidget_parameter_value_list")
        self.dockWidgetContents = QWidget()
        self.dockWidgetContents.setObjectName(u"dockWidgetContents")
        self.verticalLayout = QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.treeView_parameter_value_list = ParameterValueListTreeView(self.dockWidgetContents)
        self.treeView_parameter_value_list.setObjectName(u"treeView_parameter_value_list")
        self.treeView_parameter_value_list.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.treeView_parameter_value_list.setEditTriggers(QAbstractItemView.AnyKeyPressed|QAbstractItemView.EditKeyPressed)
        self.treeView_parameter_value_list.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.treeView_parameter_value_list.setUniformRowHeights(True)

        self.verticalLayout.addWidget(self.treeView_parameter_value_list)

        self.dockWidget_parameter_value_list.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_parameter_value_list)
        self.dockWidget_relationship_parameter_value = QDockWidget(MainWindow)
        self.dockWidget_relationship_parameter_value.setObjectName(u"dockWidget_relationship_parameter_value")
        self.dockWidgetContents_2 = QWidget()
        self.dockWidgetContents_2.setObjectName(u"dockWidgetContents_2")
        self.verticalLayout_5 = QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.tableView_relationship_parameter_value = RelationshipParameterValueTableView(self.dockWidgetContents_2)
        self.tableView_relationship_parameter_value.setObjectName(u"tableView_relationship_parameter_value")
        sizePolicy1 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy1.setHorizontalStretch(2)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.tableView_relationship_parameter_value.sizePolicy().hasHeightForWidth())
        self.tableView_relationship_parameter_value.setSizePolicy(sizePolicy1)
        self.tableView_relationship_parameter_value.setMouseTracking(True)
        self.tableView_relationship_parameter_value.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.tableView_relationship_parameter_value.setLayoutDirection(Qt.LeftToRight)
        self.tableView_relationship_parameter_value.setTabKeyNavigation(False)
        self.tableView_relationship_parameter_value.setSelectionBehavior(QAbstractItemView.SelectItems)
        self.tableView_relationship_parameter_value.setSortingEnabled(False)
        self.tableView_relationship_parameter_value.setWordWrap(False)
        self.tableView_relationship_parameter_value.horizontalHeader().setHighlightSections(False)
        self.tableView_relationship_parameter_value.verticalHeader().setVisible(False)
        self.tableView_relationship_parameter_value.verticalHeader().setHighlightSections(False)

        self.verticalLayout_5.addWidget(self.tableView_relationship_parameter_value)

        self.dockWidget_relationship_parameter_value.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_relationship_parameter_value)
        self.dockWidget_object_parameter_value = QDockWidget(MainWindow)
        self.dockWidget_object_parameter_value.setObjectName(u"dockWidget_object_parameter_value")
        self.dockWidgetContents_3 = QWidget()
        self.dockWidgetContents_3.setObjectName(u"dockWidgetContents_3")
        self.verticalLayout_3 = QVBoxLayout(self.dockWidgetContents_3)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.tableView_object_parameter_value = ObjectParameterValueTableView(self.dockWidgetContents_3)
        self.tableView_object_parameter_value.setObjectName(u"tableView_object_parameter_value")
        sizePolicy1.setHeightForWidth(self.tableView_object_parameter_value.sizePolicy().hasHeightForWidth())
        self.tableView_object_parameter_value.setSizePolicy(sizePolicy1)
        font = QFont()
        font.setBold(False)
        font.setWeight(50)
        self.tableView_object_parameter_value.setFont(font)
        self.tableView_object_parameter_value.setMouseTracking(True)
        self.tableView_object_parameter_value.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.tableView_object_parameter_value.setLayoutDirection(Qt.LeftToRight)
        self.tableView_object_parameter_value.setTabKeyNavigation(False)
        self.tableView_object_parameter_value.setSelectionBehavior(QAbstractItemView.SelectItems)
        self.tableView_object_parameter_value.setSortingEnabled(False)
        self.tableView_object_parameter_value.setWordWrap(False)
        self.tableView_object_parameter_value.horizontalHeader().setHighlightSections(False)
        self.tableView_object_parameter_value.verticalHeader().setVisible(False)
        self.tableView_object_parameter_value.verticalHeader().setMinimumSectionSize(20)
        self.tableView_object_parameter_value.verticalHeader().setHighlightSections(False)

        self.verticalLayout_3.addWidget(self.tableView_object_parameter_value)

        self.dockWidget_object_parameter_value.setWidget(self.dockWidgetContents_3)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_object_parameter_value)
        self.dockWidget_object_parameter_definition = QDockWidget(MainWindow)
        self.dockWidget_object_parameter_definition.setObjectName(u"dockWidget_object_parameter_definition")
        self.dockWidgetContents_4 = QWidget()
        self.dockWidgetContents_4.setObjectName(u"dockWidgetContents_4")
        self.verticalLayout_8 = QVBoxLayout(self.dockWidgetContents_4)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.tableView_object_parameter_definition = ObjectParameterDefinitionTableView(self.dockWidgetContents_4)
        self.tableView_object_parameter_definition.setObjectName(u"tableView_object_parameter_definition")
        sizePolicy1.setHeightForWidth(self.tableView_object_parameter_definition.sizePolicy().hasHeightForWidth())
        self.tableView_object_parameter_definition.setSizePolicy(sizePolicy1)
        self.tableView_object_parameter_definition.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.tableView_object_parameter_definition.setLayoutDirection(Qt.LeftToRight)
        self.tableView_object_parameter_definition.setTabKeyNavigation(False)
        self.tableView_object_parameter_definition.setSelectionBehavior(QAbstractItemView.SelectItems)
        self.tableView_object_parameter_definition.setSortingEnabled(False)
        self.tableView_object_parameter_definition.setWordWrap(False)
        self.tableView_object_parameter_definition.horizontalHeader().setHighlightSections(False)
        self.tableView_object_parameter_definition.horizontalHeader().setProperty("showSortIndicator", False)
        self.tableView_object_parameter_definition.verticalHeader().setVisible(False)
        self.tableView_object_parameter_definition.verticalHeader().setHighlightSections(False)

        self.verticalLayout_8.addWidget(self.tableView_object_parameter_definition)

        self.dockWidget_object_parameter_definition.setWidget(self.dockWidgetContents_4)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_object_parameter_definition)
        self.dockWidget_relationship_parameter_definition = QDockWidget(MainWindow)
        self.dockWidget_relationship_parameter_definition.setObjectName(u"dockWidget_relationship_parameter_definition")
        self.dockWidgetContents_5 = QWidget()
        self.dockWidgetContents_5.setObjectName(u"dockWidgetContents_5")
        self.verticalLayout_10 = QVBoxLayout(self.dockWidgetContents_5)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName(u"verticalLayout_10")
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.tableView_relationship_parameter_definition = RelationshipParameterDefinitionTableView(self.dockWidgetContents_5)
        self.tableView_relationship_parameter_definition.setObjectName(u"tableView_relationship_parameter_definition")
        sizePolicy1.setHeightForWidth(self.tableView_relationship_parameter_definition.sizePolicy().hasHeightForWidth())
        self.tableView_relationship_parameter_definition.setSizePolicy(sizePolicy1)
        self.tableView_relationship_parameter_definition.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.tableView_relationship_parameter_definition.setLayoutDirection(Qt.LeftToRight)
        self.tableView_relationship_parameter_definition.setTabKeyNavigation(False)
        self.tableView_relationship_parameter_definition.setSelectionBehavior(QAbstractItemView.SelectItems)
        self.tableView_relationship_parameter_definition.setSortingEnabled(False)
        self.tableView_relationship_parameter_definition.setWordWrap(False)
        self.tableView_relationship_parameter_definition.horizontalHeader().setHighlightSections(False)
        self.tableView_relationship_parameter_definition.verticalHeader().setVisible(False)
        self.tableView_relationship_parameter_definition.verticalHeader().setHighlightSections(False)

        self.verticalLayout_10.addWidget(self.tableView_relationship_parameter_definition)

        self.dockWidget_relationship_parameter_definition.setWidget(self.dockWidgetContents_5)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_relationship_parameter_definition)
        self.dockWidget_object_tree = QDockWidget(MainWindow)
        self.dockWidget_object_tree.setObjectName(u"dockWidget_object_tree")
        self.dockWidget_object_tree.setFeatures(QDockWidget.NoDockWidgetFeatures)
        self.dockWidget_object_tree.setAllowedAreas(Qt.LeftDockWidgetArea)
        self.dockWidgetContents_6 = QWidget()
        self.dockWidgetContents_6.setObjectName(u"dockWidgetContents_6")
        self.verticalLayout_4 = QVBoxLayout(self.dockWidgetContents_6)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.treeView_object = ObjectTreeView(self.dockWidgetContents_6)
        self.treeView_object.setObjectName(u"treeView_object")
        sizePolicy2 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy2.setHorizontalStretch(1)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.treeView_object.sizePolicy().hasHeightForWidth())
        self.treeView_object.setSizePolicy(sizePolicy2)
        self.treeView_object.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.treeView_object.setEditTriggers(QAbstractItemView.EditKeyPressed)
        self.treeView_object.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.treeView_object.setSelectionBehavior(QAbstractItemView.SelectItems)
        self.treeView_object.setIconSize(QSize(20, 20))
        self.treeView_object.setUniformRowHeights(True)

        self.verticalLayout_4.addWidget(self.treeView_object)

        self.dockWidget_object_tree.setWidget(self.dockWidgetContents_6)
        MainWindow.addDockWidget(Qt.LeftDockWidgetArea, self.dockWidget_object_tree)
        self.dockWidget_relationship_tree = QDockWidget(MainWindow)
        self.dockWidget_relationship_tree.setObjectName(u"dockWidget_relationship_tree")
        self.dockWidget_relationship_tree.setAllowedAreas(Qt.AllDockWidgetAreas)
        self.dockWidgetContents_7 = QWidget()
        self.dockWidgetContents_7.setObjectName(u"dockWidgetContents_7")
        self.verticalLayout_6 = QVBoxLayout(self.dockWidgetContents_7)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.treeView_relationship = RelationshipTreeView(self.dockWidgetContents_7)
        self.treeView_relationship.setObjectName(u"treeView_relationship")
        self.treeView_relationship.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.treeView_relationship.setEditTriggers(QAbstractItemView.EditKeyPressed)
        self.treeView_relationship.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.treeView_relationship.setSelectionBehavior(QAbstractItemView.SelectItems)
        self.treeView_relationship.setIconSize(QSize(20, 20))
        self.treeView_relationship.setUniformRowHeights(True)

        self.verticalLayout_6.addWidget(self.treeView_relationship)

        self.dockWidget_relationship_tree.setWidget(self.dockWidgetContents_7)
        MainWindow.addDockWidget(Qt.LeftDockWidgetArea, self.dockWidget_relationship_tree)
        self.dockWidget_entity_graph = QDockWidget(MainWindow)
        self.dockWidget_entity_graph.setObjectName(u"dockWidget_entity_graph")
        self.dockWidgetContents_8 = QWidget()
        self.dockWidgetContents_8.setObjectName(u"dockWidgetContents_8")
        self.verticalLayout_7 = QVBoxLayout(self.dockWidgetContents_8)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.graphicsView = EntityQGraphicsView(self.dockWidgetContents_8)
        self.graphicsView.setObjectName(u"graphicsView")
        sizePolicy1.setHeightForWidth(self.graphicsView.sizePolicy().hasHeightForWidth())
        self.graphicsView.setSizePolicy(sizePolicy1)
        self.graphicsView.setMouseTracking(True)
        self.graphicsView.setFrameShape(QFrame.NoFrame)
        self.graphicsView.setDragMode(QGraphicsView.ScrollHandDrag)

        self.verticalLayout_7.addWidget(self.graphicsView)

        self.dockWidget_entity_graph.setWidget(self.dockWidgetContents_8)
        MainWindow.addDockWidget(Qt.LeftDockWidgetArea, self.dockWidget_entity_graph)
        self.dockWidget_pivot_table = QDockWidget(MainWindow)
        self.dockWidget_pivot_table.setObjectName(u"dockWidget_pivot_table")
        self.dockWidgetContents_10 = QWidget()
        self.dockWidgetContents_10.setObjectName(u"dockWidgetContents_10")
        self.verticalLayout_13 = QVBoxLayout(self.dockWidgetContents_10)
        self.verticalLayout_13.setSpacing(0)
        self.verticalLayout_13.setObjectName(u"verticalLayout_13")
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.pivot_table = PivotTableView(self.dockWidgetContents_10)
        self.pivot_table.setObjectName(u"pivot_table")
        self.pivot_table.setContextMenuPolicy(Qt.DefaultContextMenu)

        self.verticalLayout_13.addWidget(self.pivot_table)

        self.dockWidget_pivot_table.setWidget(self.dockWidgetContents_10)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_pivot_table)
        self.dockWidget_frozen_table = QDockWidget(MainWindow)
        self.dockWidget_frozen_table.setObjectName(u"dockWidget_frozen_table")
        self.dockWidgetContents_11 = QWidget()
        self.dockWidgetContents_11.setObjectName(u"dockWidgetContents_11")
        self.verticalLayout_14 = QVBoxLayout(self.dockWidgetContents_11)
        self.verticalLayout_14.setSpacing(0)
        self.verticalLayout_14.setObjectName(u"verticalLayout_14")
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.frozen_table = FrozenTableView(self.dockWidgetContents_11)
        self.frozen_table.setObjectName(u"frozen_table")

        self.verticalLayout_14.addWidget(self.frozen_table)

        self.dockWidget_frozen_table.setWidget(self.dockWidgetContents_11)
        MainWindow.addDockWidget(Qt.RightDockWidgetArea, self.dockWidget_frozen_table)
        self.dockWidget_exports = QDockWidget(MainWindow)
        self.dockWidget_exports.setObjectName(u"dockWidget_exports")
        self.dockWidget_exports.setMaximumSize(QSize(524287, 64))
        self.dockWidget_exports.setFeatures(QDockWidget.DockWidgetClosable)
        self.dockWidget_exports.setAllowedAreas(Qt.BottomDockWidgetArea)
        self.dockWidgetContents_12 = QWidget()
        self.dockWidgetContents_12.setObjectName(u"dockWidgetContents_12")
        self.horizontalLayout_3 = QHBoxLayout(self.dockWidgetContents_12)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_exports = QHBoxLayout()
        self.horizontalLayout_exports.setSpacing(1)
        self.horizontalLayout_exports.setObjectName(u"horizontalLayout_exports")
        self.horizontalSpacer = QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_exports.addItem(self.horizontalSpacer)


        self.horizontalLayout_3.addLayout(self.horizontalLayout_exports)

        self.dockWidget_exports.setWidget(self.dockWidgetContents_12)
        MainWindow.addDockWidget(Qt.BottomDockWidgetArea, self.dockWidget_exports)
        QWidget.setTabOrder(self.tableView_object_parameter_value, self.tableView_object_parameter_definition)
        QWidget.setTabOrder(self.tableView_object_parameter_definition, self.tableView_relationship_parameter_value)
        QWidget.setTabOrder(self.tableView_relationship_parameter_value, self.tableView_relationship_parameter_definition)
        QWidget.setTabOrder(self.tableView_relationship_parameter_definition, self.treeView_parameter_value_list)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuGraph.menuAction())
        self.menubar.addAction(self.menuPivot_table.menuAction())
        self.menubar.addAction(self.menuSession.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuSession.addAction(self.actionRefresh)
        self.menuSession.addAction(self.actionCommit)
        self.menuSession.addAction(self.actionRollback)
        self.menuSession.addSeparator()
        self.menuSession.addAction(self.actionView_history)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionAdd_object_classes)
        self.menuEdit.addAction(self.actionAdd_objects)
        self.menuEdit.addAction(self.actionAdd_relationship_classes)
        self.menuEdit.addAction(self.actionAdd_relationships)
        self.menuEdit.addAction(self.actionManage_relationships)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionEdit_selected)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionRemove_selected)
        self.menuEdit.addAction(self.actionMass_remove_items)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionManage_parameter_tags)
        self.menuEdit.addSeparator()
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionImport)
        self.menuFile.addAction(self.actionExport)
        self.menuFile.addAction(self.actionExport_session)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExport_graph_as_pdf)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionStacked_style)
        self.menuView.addAction(self.actionPivot_style)
        self.menuView.addAction(self.actionGraph_style)
        self.menuGraph.addAction(self.actionFull_relationship_expansion)
        self.menuGraph.addSeparator()
        self.menuGraph.addAction(self.actionSave_positions)
        self.menuGraph.addAction(self.actionClear_positions)
        self.menuGraph.addSeparator()
        self.menuGraph.addAction(self.actionHide_selected)
        self.menuGraph.addAction(self.actionShow_hidden)
        self.menuGraph.addSeparator()
        self.menuGraph.addAction(self.actionPrune_selected_entities)
        self.menuGraph.addAction(self.actionPrune_selected_classes)
        self.menuGraph.addAction(self.menuRestore_pruned.menuAction())
        self.menuGraph.addAction(self.actionRestore_all_pruned)
        self.menuGraph.addSeparator()
        self.menuGraph.addAction(self.menuAdd_parameter_heat_map.menuAction())
        self.menuGraph.addAction(self.actionRebuild_graph)
        self.menuGraph.addSeparator()
        self.menuHelp.addAction(self.actionUser_guide)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.actionCommit.setText(QCoreApplication.translate("MainWindow", u"Commit", None))
#if QT_CONFIG(shortcut)
        self.actionCommit.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Return", None))
#endif // QT_CONFIG(shortcut)
        self.actionRollback.setText(QCoreApplication.translate("MainWindow", u"Rollback", None))
#if QT_CONFIG(shortcut)
        self.actionRollback.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Backspace", None))
#endif // QT_CONFIG(shortcut)
        self.actionClose.setText(QCoreApplication.translate("MainWindow", u"Close", None))
#if QT_CONFIG(shortcut)
        self.actionClose.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+W", None))
#endif // QT_CONFIG(shortcut)
        self.actionAdd_object_classes.setText(QCoreApplication.translate("MainWindow", u"Add object classes", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_object_classes.setToolTip(QCoreApplication.translate("MainWindow", u"Add object classes", None))
#endif // QT_CONFIG(tooltip)
        self.actionAdd_objects.setText(QCoreApplication.translate("MainWindow", u"Add objects", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_objects.setToolTip(QCoreApplication.translate("MainWindow", u"Add objects", None))
#endif // QT_CONFIG(tooltip)
        self.actionAdd_relationship_classes.setText(QCoreApplication.translate("MainWindow", u"Add relationship classes", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_relationship_classes.setToolTip(QCoreApplication.translate("MainWindow", u"Add relationship classes", None))
#endif // QT_CONFIG(tooltip)
        self.actionAdd_relationships.setText(QCoreApplication.translate("MainWindow", u"Add relationships", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_relationships.setToolTip(QCoreApplication.translate("MainWindow", u"Add relationships", None))
#endif // QT_CONFIG(tooltip)
        self.actionImport.setText(QCoreApplication.translate("MainWindow", u"Import...", None))
#if QT_CONFIG(tooltip)
        self.actionImport.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Import data from file into current urls</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionExport.setText(QCoreApplication.translate("MainWindow", u"Export...", None))
#if QT_CONFIG(tooltip)
        self.actionExport.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Export data from current url to a file</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionCopy.setText(QCoreApplication.translate("MainWindow", u"Copy", None))
#if QT_CONFIG(shortcut)
        self.actionCopy.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+C", None))
#endif // QT_CONFIG(shortcut)
        self.actionPaste.setText(QCoreApplication.translate("MainWindow", u"Paste", None))
#if QT_CONFIG(shortcut)
        self.actionPaste.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+V", None))
#endif // QT_CONFIG(shortcut)
        self.actionRefresh.setText(QCoreApplication.translate("MainWindow", u"Refresh", None))
#if QT_CONFIG(shortcut)
        self.actionRefresh.setShortcut(QCoreApplication.translate("MainWindow", u"F5", None))
#endif // QT_CONFIG(shortcut)
        self.actionEdit_selected.setText(QCoreApplication.translate("MainWindow", u"Edit selected items", None))
        self.actionManage_parameter_tags.setText(QCoreApplication.translate("MainWindow", u"Manage parameter tags", None))
        self.actionRemove_selected.setText(QCoreApplication.translate("MainWindow", u"Remove selected items", None))
#if QT_CONFIG(shortcut)
        self.actionRemove_selected.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Del", None))
#endif // QT_CONFIG(shortcut)
        self.actionHide_selected.setText(QCoreApplication.translate("MainWindow", u"Hide selected", None))
        self.actionShow_hidden.setText(QCoreApplication.translate("MainWindow", u"Show hidden", None))
        self.actionPrune_selected_entities.setText(QCoreApplication.translate("MainWindow", u"Prune selected entities", None))
        self.actionRestore_all_pruned.setText(QCoreApplication.translate("MainWindow", u"Restore all pruned", None))
        self.actionStacked_style.setText(QCoreApplication.translate("MainWindow", u"Stacked style", None))
#if QT_CONFIG(tooltip)
        self.actionStacked_style.setToolTip(QCoreApplication.translate("MainWindow", u"Stacked-table style", None))
#endif // QT_CONFIG(tooltip)
        self.actionGraph_style.setText(QCoreApplication.translate("MainWindow", u"Graph style", None))
        self.actionPivot_style.setText(QCoreApplication.translate("MainWindow", u"Pivot style", None))
        self.actionView_history.setText(QCoreApplication.translate("MainWindow", u"View history...", None))
        self.actionClear_positions.setText(QCoreApplication.translate("MainWindow", u"Clear saved positions", None))
        self.actionSave_positions.setText(QCoreApplication.translate("MainWindow", u"Save positions", None))
        self.actionExport_graph_as_pdf.setText(QCoreApplication.translate("MainWindow", u"Export graph as PDF...", None))
        self.actionPrune_selected_classes.setText(QCoreApplication.translate("MainWindow", u"Prune selected classes", None))
        self.actiontt.setText(QCoreApplication.translate("MainWindow", u"tt", None))
        self.actionMass_remove_items.setText(QCoreApplication.translate("MainWindow", u"Mass remove items...", None))
        self.actionSaveAsTemplate.setText(QCoreApplication.translate("MainWindow", u"Save as template...", None))
        self.actionLoadTemplate.setText(QCoreApplication.translate("MainWindow", u"Load template...", None))
        self.actionExport_session.setText(QCoreApplication.translate("MainWindow", u"Export session...", None))
#if QT_CONFIG(tooltip)
        self.actionExport_session.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p>Export items added and updated in the current session (since last commit) into a file</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionSettings.setText(QCoreApplication.translate("MainWindow", u"Settings...", None))
        self.actionFull_relationship_expansion.setText(QCoreApplication.translate("MainWindow", u"Full relationship expansion", None))
#if QT_CONFIG(tooltip)
        self.actionFull_relationship_expansion.setToolTip(QCoreApplication.translate("MainWindow", u"<html><head/><body><p><span style=\" font-weight:600;\">Checked</span>: Whenever an object is included in the Entity graph, the graph automatically includes <span style=\" font-style:italic;\">all</span> its relationships.</p><p><span style=\" font-weight:600;\">Unchecked</span>: Whenever <span style=\" font-style:italic;\">all</span> the objects in a relationship are included in the Entity graph, the graph automatically includes the relationship.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.actionInput_type.setText(QCoreApplication.translate("MainWindow", u"Input type", None))
        self.actionParameter_value.setText(QCoreApplication.translate("MainWindow", u"Parameter value", None))
        self.actionRelationship.setText(QCoreApplication.translate("MainWindow", u"Relationship", None))
        self.actionIndexed_parameter_expansion.setText(QCoreApplication.translate("MainWindow", u"Indexed parameter expansion", None))
        self.actionInput_type_parameter_value.setText(QCoreApplication.translate("MainWindow", u"Parameter value", None))
        self.actionInput_type_relationship.setText(QCoreApplication.translate("MainWindow", u"Relationship", None))
        self.actionInput_type_index_expansion.setText(QCoreApplication.translate("MainWindow", u"Index expansion", None))
        self.actionRebuild_graph.setText(QCoreApplication.translate("MainWindow", u"Rebuild graph", None))
        self.actionManage_relationships.setText(QCoreApplication.translate("MainWindow", u"Manage relationships", None))
        self.actionUser_guide.setText(QCoreApplication.translate("MainWindow", u"User guide", None))
#if QT_CONFIG(shortcut)
        self.actionUser_guide.setShortcut(QCoreApplication.translate("MainWindow", u"F1", None))
#endif // QT_CONFIG(shortcut)
        self.menuSession.setTitle(QCoreApplication.translate("MainWindow", u"Session", None))
        self.menuEdit.setTitle(QCoreApplication.translate("MainWindow", u"Edit", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuView.setTitle(QCoreApplication.translate("MainWindow", u"View", None))
        self.menuGraph.setTitle(QCoreApplication.translate("MainWindow", u"Graph", None))
        self.menuRestore_pruned.setTitle(QCoreApplication.translate("MainWindow", u"Restore pruned", None))
        self.menuAdd_parameter_heat_map.setTitle(QCoreApplication.translate("MainWindow", u"Add parameter heat map", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
        self.menuPivot_table.setTitle(QCoreApplication.translate("MainWindow", u"Pivot table", None))
        self.dockWidget_alternative_scenario_tree.setWindowTitle(QCoreApplication.translate("MainWindow", u"Alternative/Scenario tree", None))
#if QT_CONFIG(accessibility)
        self.treeView_alternative_scenario.setAccessibleName(QCoreApplication.translate("MainWindow", u"alternative tree", None))
#endif // QT_CONFIG(accessibility)
        self.dockWidget_parameter_value_list.setWindowTitle(QCoreApplication.translate("MainWindow", u"Parameter value list", None))
#if QT_CONFIG(accessibility)
        self.treeView_parameter_value_list.setAccessibleName(QCoreApplication.translate("MainWindow", u"parameter_value_list", None))
#endif // QT_CONFIG(accessibility)
        self.dockWidget_relationship_parameter_value.setWindowTitle(QCoreApplication.translate("MainWindow", u"Relationship parameter_value", None))
#if QT_CONFIG(accessibility)
        self.tableView_relationship_parameter_value.setAccessibleName(QCoreApplication.translate("MainWindow", u"relationship parameter_value", None))
#endif // QT_CONFIG(accessibility)
        self.dockWidget_object_parameter_value.setWindowTitle(QCoreApplication.translate("MainWindow", u"Object parameter_value", None))
#if QT_CONFIG(accessibility)
        self.tableView_object_parameter_value.setAccessibleName(QCoreApplication.translate("MainWindow", u"object parameter_value", None))
#endif // QT_CONFIG(accessibility)
        self.dockWidget_object_parameter_definition.setWindowTitle(QCoreApplication.translate("MainWindow", u"Object parameter_definition", None))
#if QT_CONFIG(accessibility)
        self.tableView_object_parameter_definition.setAccessibleName(QCoreApplication.translate("MainWindow", u"object parameter_definition", None))
#endif // QT_CONFIG(accessibility)
        self.dockWidget_relationship_parameter_definition.setWindowTitle(QCoreApplication.translate("MainWindow", u"Relationship parameter_definition", None))
#if QT_CONFIG(accessibility)
        self.tableView_relationship_parameter_definition.setAccessibleName(QCoreApplication.translate("MainWindow", u"relationship parameter_definition", None))
#endif // QT_CONFIG(accessibility)
        self.dockWidget_object_tree.setWindowTitle(QCoreApplication.translate("MainWindow", u"Object tree", None))
#if QT_CONFIG(accessibility)
        self.treeView_object.setAccessibleName(QCoreApplication.translate("MainWindow", u"object tree", None))
#endif // QT_CONFIG(accessibility)
        self.dockWidget_relationship_tree.setWindowTitle(QCoreApplication.translate("MainWindow", u"Relationship tree", None))
#if QT_CONFIG(accessibility)
        self.treeView_relationship.setAccessibleName(QCoreApplication.translate("MainWindow", u"relationship tree", None))
#endif // QT_CONFIG(accessibility)
        self.dockWidget_entity_graph.setWindowTitle(QCoreApplication.translate("MainWindow", u"Entity graph", None))
        self.dockWidget_pivot_table.setWindowTitle(QCoreApplication.translate("MainWindow", u"Pivot table", None))
        self.dockWidget_frozen_table.setWindowTitle(QCoreApplication.translate("MainWindow", u"Frozen table", None))
        self.dockWidget_exports.setWindowTitle(QCoreApplication.translate("MainWindow", u"Exports", None))
    # retranslateUi

