.. _Publishing to PyPI:

Publishing to PyPI
==================

This document describes the prerequisites and workflow to publish Spine Toolbox
to `The Python Package Index (PyPI) <https://pypi.org>`_.

First, make sure you have all the developer packages installed by calling

::

    $ pip install --upgrade -r dev-requirements.txt

inside your Python environment.

The most convenient order in which Spine packages should be published is
``spinedb_api``, then ``spine_engine``, ``spine_items``, and last ``spinetoolbox``.

For each of the packages, make sure you are on the ``master`` branch
and the repositories are up-to-date.
Also, test that Toolbox works as expected.

Starting from ``spinedb_api``, the following steps should be taken.

1. Update dependencies
----------------------

This step is skipped for ``spinedb_api`` as it does not depend on other packages.

Update ``setup.cfg`` or ``setup.py`` files so that they require the latest dependencies.
For example, if you just published ``spinedb_api`` 0.99.0, ensure that ``spine_engine``'s
``setup.py`` includes the line

::

    "spinedb_api>=0.99.0",

Note: ``spine_items`` and ``spinetoolbox`` depend circularly on each other.
When updating ``spine_items``'s ``setup.cfg``,
you should update the ``spinetoolbox`` entry as well even though that version will be published later.

Finally, please remember to commit and push your changes before continuing.

2. Tag the git revision
-----------------------

Tag the code revision with

::

    $ git tag --message "Version x.y.z" <version number>


You can find the current version in ``<package>/version.py`` files
except for ``spinedb_api`` which stores the version in ``spinedb_api/__init__.py``.

Note that you should drop the release level part of the version number,
e.g. 0.11.0.dev0 becomes 0.11.0 for the purpose of the git tag.

3. Make version final
---------------------

The release level of Spine packages is 'dev' by default
but we want to upload final versions to PyPI.
Remove the ``.dev0`` part of the package's version string in ``version.py``
(``__init__.py`` in case of ``spinedb_api``)
or replace ``dev`` by ``final`` if you are working with ``spinetoolbox``.

Do not commit this change to git.
The version number will be updated again in the last step.

4. Clean up previous release builds
-----------------------------------

Delete the ``build/`` and ``dist/`` directories in the repository root
if they exist.
The directories will be autogenerated in the build step.

Another option to clean previous builds is with

::

    $ python setup.py clean --all


5.Build
-------

Build a source distribution archive and a wheel package with

::

    $ python setup.py sdist bdist_wheel

This will create distribution files under the ``dist/`` and ``build/`` directories.

Please remember to clean up between subsequent builds per the instructions in the previous step.


6. Upload
---------

Before making a real upload, please test using TestPyPI which is a separate 
instance from the real index server.
Once a version has been uploaded to PyPI, it cannot be reverted or modified. 

`Register an account <https://test.pypi.org/account/register/>`_ and ask 
some of the owners of `the Spine Toolbox package <https://test.pypi.org/project/spinetoolbox/>`_ 
(or other relevant package) to add you as a maintainer.

Upload the distribution using

::

    $ twine upload --repository testpypi dist/*

See `Using TestPyPI <https://packaging.python.org/guides/using-testpypi/>`_ 
for more information. To avoid entering your username and password every time,
see `Keyring support in twine documentation <https://twine.readthedocs.io/en/latest/#keyring-support>`_.

If everything went smoothly, you are ready to upload the real index.
Again, you need to register to PyPI and ask to become a maintainer of the package
you want to upload to. Upload the distribution using

::

    $ twine upload dist/*


7. Bump version number
----------------------

Now that the package has been released to PyPI,
it is time to update the version to the next development version.
Bump the number in ``version.py`` (``__init__.py`` for ``spinedb_api``) to the next appropriate one
and append ``.dev0`` to the version string (replace ``final`` by ``dev`` for ``spinetoolbox``).

Do not forget to push the changes.

8. Rinse and repeat
-------------------

Switch to the next Spine package and start over from step 1
unless you just finished with ``spinetoolbox``.
In that case, congratulations!
You have just released the Spine project to PyPI.
