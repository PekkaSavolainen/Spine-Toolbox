<<<<<<< HEAD
-e git+https://github.com/Spine-project/Spine-Database-API.git@master#egg=spinedb_api
-e git+https://github.com/Spine-project/spine-engine.git@master#egg=spine_engine
-e git+https://github.com/Spine-project/spine-items.git@master#egg=spine_items
=======
#git+https://github.com/Spine-project/Spine-Database-API.git#egg=spinedb_api
#git+https://github.com/Spine-project/spine-engine.git@server#egg=spine_engine
# cchardet used to be a dependency of datapackage and version 2.1.6 requires users to install Visual C++
# NOTE: Commented on purpose. datapackage 1.15.0 does not require cchardet anymore. If we ever decide to
# use cchardet in addition to chardet, we should remember this constraint.
# cchardet!=2.1.6
#click >= 7.1.2
#colorama >= 0.4.4
#coloredlogs >= 14.0
#croniter >= 1.0.12
#cx-Oracle >= 8.1.0
#cycler >= 0.10.0
#decorator >= 4.4.2
#docstring-parser >= 0.7.1
#et-xmlfile >= 1.1.0
#fire >= 0.4.0
#future >= 0.18.2
#gdxcc >= 8.33.2
#grpcio >= 1.37.1
#grpcio-health-checking >= 1.37.1
#humanfriendly >= 9.1
#idna >= 2.10
#ipykernel >= 5.5.3
#ipython >= 7.22.0
#ipython-genutils >= 0.2.0
#isodate >= 0.6.0
#jedi >= 0.18.0
#jill >= 0.9.2
#jmespath >= 0.10.0
#jsonlines >= 2.0.0
#jsonpointer >= 2.1
#jsonschema >= 2.6.0  # jsonschema is a requirement of datapackage
#jupyter-client >= 6.1.12
#jupyter-core >= 4.7.1
#kiwisolver >= 1.3.1
#linear-tsv >= 1.1.0
#matplotlib!=3.2.1, >3.0, <3.3.1
# matplotlib == 3.2.1 is broken; importing e.g. networkx after matplotlib.backends.backend_qt5agg backtraces
# also, matplotlib == 3.2.1 requires shiboken2 but does not list it in its dependencies
# matplotlib 3.3.1 fails to install properly from pip, see
# https://stackoverflow.com/questions/24251102/from-matplotlib-import-ft2font-importerror-dll-load-failed-the-specified-pro/24251889#24251889
#networkx >= 2.5.1
#pandas >= 1.2.4
#parso >= 0.8.2
#pendulum >= 1.4.4
#pickleshare >= 0.7.5
#pillow >= 8.2.0
#prompt-toolkit >= 3.0.18
#protobuf >= 3.15.8
#psutil >= 5.8.0
#psycopg2 >= 2.8.6
#pygments >= 2.8.1
#pymysql >= 1.0.2
#pyodbc >= 4.0.30
#pyparsing >= 2.4.7
#pyreadline >= 2.1
#pyrsistent >= 0.17.0
# tableschema 1.19.4 requires pyrsistent < 0.17, but we are using a newer tableschema now, let's see what happens
#pyside2 >=5.14, <5.15
#python-editor >= 1.0.4
#python-gnupg >= 0.4.7
#pytz >= 2020.5
#pytzdata >= 2020.1
#pywin32 >= 301;sys_platform=="win32"
# 'ImportError: DLL load failed while importing win32api' error happens on Conda Python 3.8 if pywin32>=227.
# dagster does not allow 226, so we are left with 225. The error happens when trying to execute anything in the
# Python or Julia Console
#pyzmq < 22
# cx_freeze 6.6 has trouble building pyzmq>=22
#qtconsole >= 5.0.3
#qtpy >= 1.9.0
#requests >= 2.25.1  # Dagster 0.10.1 uses requests
#requests-futures >= 1.0.0
#rfc3986 >= 1.4.0
#rx >= 1.6.1
#s3transfer >= 0.4.2
#scipy >= 1.6.3
#semantic-version >= 2.8.5
#six >= 1.15.0
#tableschema >= 1.20.2
#tabulate >= 0.8.9
#tabulator >= 1.53.5
#termcolor >= 1.1.0
#text-unidecode >= 1.3
#toposort >= 1.6
#tornado >= 6.1
# tornado 6.1 is required on Python 3.8 on Windows to make Python and Julia Consoles work.
# On tornado 6.0.4, jupyter-client fails in creating the communication channels (iopub, stdin, hb, etc.)
#tqdm >= 4.60.0
#traitlets >= 5.0.5
#tzlocal >= 1.5.1
#unicodecsv >= 0.14.1
#urllib3 >= 1.26.5  # Requirement of requests package.
# 1.26.5 fixes a security vulnerability in 1.26.4 (https://github.com/advisories/GHSA-q2q7-5pp4-w6pg)
#watchdog >= 2.0.3
#wcwidth >= 0.2.5
#wget >= 3.2
#xlrd >= 2.0.1
>>>>>>> 6a414252b1a7221af39beb993cc538c3c7ebc743
-e .

